# Production database configuration for PenguBook
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: pengubook_postgres_prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pengubook}
      POSTGRES_USER: ${POSTGRES_USER:-pengubook}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - pengubook_network
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=4MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB

  redis:
    image: redis:7-alpine
    container_name: pengubook_redis_prod
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pengubook_network

  # Optional: Database monitoring
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: pengubook_postgres_exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: postgresql://${POSTGRES_USER:-pengubook}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-pengubook}?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - pengubook_network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  pengubook_network:
    driver: bridge