{
  "permissions": {
    "allow": [
      "Bash(npm install)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma:*)",
      "WebFetch(domain:docs.abs.xyz)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(node:*)",
      "Bash(curl:*)",
      "Bash(npx tsx:*)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(fuser:*)",
      "Bash(killall:*)",
      "Bash(xargs -r kill -9)",
      "Bash(ss:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(npx eslint:*)",
      "Bash(npm run lint)",
      "Bash(printf '\\n')",
      "Bash(git push:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(pkill:*)",
      "WebSearch",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(./scripts/fix-prisma-imports.sh:*)",
      "Bash(echo:*)",
      "Bash(timeout 180 npm run build)",
      "Bash(timeout 240 npm run build)",
      "Read(//tmp/**)",
      "Bash(tee:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if ! grep -q \"export const dynamic\" \"$file\")",
      "Bash(then)",
      "Bash(fi)",
      "Bash(done)",
      "Bash(git grep:*)",
      "Bash(wc:*)",
      "Bash(xargs cat:*)",
      "Bash(xargs ls:*)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(do echo \"=== $file ===\")",
      "Bash(do if grep -q \"!loading\" \"$file\")",
      "Bash(! grep -q \"authLoading\" \"$file\")",
      "Bash(then sed -i 's/!loading/!authLoading/g' \"$file\" echo \"Fixed: $file\" fi done)",
      "Read(//home/arson/PenguBook/src/app/**)",
      "Read(//home/arson/PenguBook/src/components/**)",
      "Bash(awk:*)",
      "Read(//home/arson/PenguBook/src/**)",
      "Bash(md5sum:*)",
      "Bash(git config:*)",
      "Read(//wsl.localhost/Ubuntu/mnt/**)",
      "Bash(git remote set-url:*)",
      "Read(//WSL.LOCALHOST/UBUNTU/home/arson/PenguBook/src/components/**)",
      "Read(//WSL.LOCALHOST/UBUNTU/home/arson/PenguBook/src/app/profile/[id]/**)",
      "Read(//WSL.LOCALHOST/UBUNTU/home/arson/PenguBook/src/app/**)",
      "Bash(git reset:*)"
    ],
    "deny": [],
    "ask": []
  }
}